name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # schedule:
  #   - cron: '0 5 * * 1' # optional weekly CodeQL scan

jobs:
  build:
    uses: spring-guides/getting-started-macros/.github/workflows/build_initial_complete_maven_gradle.yml@main

  codeql:
    name: CodeQL (Java)
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        module: [ "initial", "complete" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'maven'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: security-extended,security-and-quality

      # ---------- Prefer Maven if pom.xml exists ----------
      - name: Build with Maven
        if: hashFiles(format('{0}/pom.xml', matrix.module)) != ''
        run: |
          cd "${{ matrix.module }}"
          mvn -B -DskipTests package

      # ---------- Only fall back to Gradle if NO pom.xml ----------
      - name: Set up Gradle (fallback)
        if: hashFiles(format('{0}/pom.xml', matrix.module)) == '' && (
              hashFiles(format('{0}/build.gradle', matrix.module)) != '' ||
              hashFiles(format('{0}/build.gradle.kts', matrix.module)) != ''
            )
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle (fallback)
        if: hashFiles(format('{0}/pom.xml', matrix.module)) == '' && (
              hashFiles(format('{0}/build.gradle', matrix.module)) != '' ||
              hashFiles(format('{0}/build.gradle.kts', matrix.module)) != ''
            )
        run: |
          if [ -x "./gradlew" ]; then
            ./gradlew -p "${{ matrix.module }}" build -x test
          else
            gradle -p "${{ matrix.module }}" build -x test
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"
  sonarcloud:
    name: SonarCloud (complete)
    runs-on: ubuntu-latest
    permissions:
      contents: read         # allow checkout
      pull-requests: read    # for PR decorations
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # better blame/coverage linking

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'maven'

      # Build + tests + JaCoCo report in the 'complete' module
      - name: Maven verify (with JaCoCo)
        run: |
          cd complete
          mvn -B -DskipTests=false clean verify

      # SonarCloud analysis (uses sonar-project.properties at repo root)
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # enables PR decoration
        run: |
          mvn -B sonar:sonar -Dsonar.token="${SONAR_TOKEN}"